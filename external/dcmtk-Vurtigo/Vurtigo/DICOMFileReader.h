/*******************************************************************************
    Vurtigo: Visualization software for interventional applications in medicine
    Copyright (C) 2009 Sunnybrook Health Sciences Centre

    This file is part of Vurtigo.

    Vurtigo is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*******************************************************************************/
#ifndef DICOMFILEREADER_H
#define DICOMFILEREADER_H

#include <QList>
#include <QString>

#include "vtkMatrix4x4.h"
#include "vtkTransform.h"
#include "vtkImageData.h"
#include "vtkImageChangeInformation.h"
#include "vtkSmartPointer.h"
#include "vtkMatrixToLinearTransform.h"

// DCMTK
#include "osconfig.h"
#include "ofstring.h"

#include "DICOMImageData.h"

  const int NUM_ENTRIES = 4;
  const std::string ENTRY_STRINGS[NUM_ENTRIES] = {"HFS", "FFS","HFP","FFP"};
  const int ENTRY_FLIPS[NUM_ENTRIES][3] = {
    {1,1,1}, /* Head First Supine to RCS*/
    {-1,1,-1}, /* Feet First Supine to RCS */
    {-1,-1,1}, /* Head First Prone to RCS */
    {1,-1,-1} /* Feet First Prone to RCS */
  };

class DICOMFileReader
{
public:
  DICOMFileReader();
  ~DICOMFileReader();

  bool setDirectory(QString dirPath);
  bool createVolume(QList<DICOMImageData*>* imgData);

  vtkImageData* getImageData() { return m_infoFix->GetOutput(); }
  vtkTransform* getTransform() { return m_transform; }

  QString getComments() { return m_comments; }

  void cleanupImageData();

protected:
  QList<QString> m_fileList;
  QList<DICOMImageData*> m_imgData;

  QList<double> m_triggerList;

  //! The vtk pipeline ready version of the image data.
  vtkSmartPointer<vtkImageData> m_vtkImgData;

  //! Matrix for the transform.
  vtkSmartPointer<vtkMatrix4x4> m_matrix;

  //! The object the converts between the vtkMatrix4x4 and the vtkTransform.
  vtkSmartPointer<vtkMatrixToLinearTransform> m_matrixToTransform;

  //! The transform for the data.
  vtkSmartPointer<vtkTransform> m_transform;

  vtkSmartPointer<vtkImageChangeInformation> m_infoFix;

  //! The DICOM IMAGE header.
  DICOMImageData* m_ddata;

  //! The output comments generated by the dicom reader about the file(s).
  QString m_comments;
};

#endif // DICOMFILEREADER_H
